{"version":3,"sources":["components/Header/details/blackLogo.svg","components/Header/details/search.svg","components/Header/details/settings.svg","components/Header/details/menu.svg","components/Header/Header.jsx","store/actions.js","components/RowTable/RowTable.jsx","components/MainTable/MainTable.jsx","components/Main/Main.jsx","components/App/App.jsx","serviceWorker.js","store/reducer.js","store/sagas.js","index.js"],"names":["module","exports","Header","className","src","menu","alt","to","logo","type","placeholder","search","settings","getData","ConvertLongNumber","number","strNum","HelpNum","Math","round","strnum","PutData","dataAPI","newData","Map","forEach","e","set","id","name","price","priceUsd","capital","marketCapUsd","volume24","parseFloat","volumeUsd24Hr","data","RowTable","props","classForTr","tradeWs","WebSocket","connect","state","items","crycur","dispatcher","bindActionCreators","TrItems","size","push","css","key","length","keyItem","dispatch","useDispatch","useEffect","onmessage","msg","WSMSG","obj","JSON","parse","base","volume","Main","App","Boolean","window","location","hostname","match","initialState","Reducer","action","newstate","entries","value","workerGetData","watchGetData","fetchData","fetch","method","redirect","then","res","json","call","put","takeEvery","sagaMiddleware","createSagaMiddleware","store","createStore","reducer","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.257902d8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blackLogo.792189d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.33315527.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.cda83765.svg\";","module.exports = __webpack_public_path__ + \"static/media/menu.72f574ee.svg\";","import React from 'react'\r\nimport './css/Header.css';\r\nimport logo from './details/blackLogo.svg'\r\nimport search from './details/search.svg'\r\nimport settings from './details/settings.svg'\r\nimport { NavLink } from 'react-router-dom';\r\nimport menu from './details/menu.svg'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"container\">\r\n                <nav className=\"header_menu\">\r\n                    <img className=\"mob_menu\" src={menu} alt=\"menu\"/>\r\n                    <div className=\"mob_menulist\">\r\n                        <NavLink  to=\"/1\" >\r\n                            <div>\r\n                                Coins\r\n                            </div>\r\n                        </NavLink>\r\n                        <NavLink  to=\"/2\" >\r\n                            <div>\r\n                                Exchanges\r\n                            </div>\r\n                        </NavLink>\r\n                        <NavLink  to=\"/3\" >\r\n                            <div>\r\n                                Profile\r\n                            </div>\r\n                        </NavLink>\r\n                        <NavLink  to=\"/4\" >\r\n                            <div>\r\n                                API\r\n                            </div>\r\n                        </NavLink>\r\n                    </div>\r\n                    <NavLink className=\"header_item\"  to=\"/1\" >\r\n                        <div>\r\n                            Coins\r\n                        </div>\r\n                    </NavLink>\r\n                    <NavLink className=\"header_item\"  to=\"/2\" >\r\n                        <div>\r\n                            Exchanges\r\n                        </div>\r\n                    </NavLink>\r\n                    <NavLink className=\"header_item\"  to=\"/3\" >\r\n                        <div>\r\n                            Profile\r\n                        </div>\r\n                    </NavLink>\r\n                    <NavLink className=\"header_item\"  to=\"/4\" >\r\n                        <div>\r\n                            API\r\n                        </div>\r\n                    </NavLink>\r\n                </nav>\r\n                <NavLink to=\"/\" className=\"header_item\">\r\n                    <img className=\"header_logo\" src={logo} alt=\"CoinsLogo\"/>\r\n                </NavLink>\r\n\r\n                <div className=\"header_config\">\r\n                    <div className=\"config_select\">\r\n                        <input type=\"text\" className=\"search_lang\" placeholder=\"Lang...\"></input>\r\n                        <div className=\"listbox_lang\">\r\n                            <div> Russian </div>\r\n                            <div> English </div>\r\n                            <div> Spanish </div>\r\n                            <div> Gembish </div>\r\n                            <div> Ggeerww </div>\r\n                        </div>\r\n\r\n                           \r\n                    </div>\r\n\r\n                    <div className=\"config_select\">\r\n                        <input type=\"text\" className=\"search_val\" placeholder=\"Val...\"></input>\r\n                        <div className=\"listbox_val\">\r\n                            <div> RBL</div>\r\n                            <div> USD </div>\r\n                            <div> TNG </div>\r\n                            <div> RUB </div>\r\n                            <div> GOG </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"config_search\">\r\n                        <input type=\"text\" className=\"search_text\" placeholder=\"search...\"></input>\r\n                        <img className=\"search_btn\" src={search} alt=\"Search\"/>\r\n                    </div>\r\n\r\n                    <div className=\"config_but\">\r\n                        <button>\r\n                            <img src={settings} alt=\"Settings\"/>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\nexport default Header;","export const GET_DATA = 'GET_DATA';\r\nexport const PUT_DATA = 'PUT_DATA';\r\nexport const UPDATE_DATA = 'UPDATE_DATA';\r\n\r\n\r\nexport const getData = () => {\r\n  return {\r\n    type: GET_DATA\r\n  }\r\n}\r\n\r\n\r\nexport function ConvertLongNumber(number) {\r\n\r\n  const billion = 1000000000;\r\n  const million = 1000000;\r\n  const after = 100;\r\n  let strNum;\r\n  let HelpNum;\r\n  if (number > billion) {\r\n    HelpNum = number / billion;\r\n    strNum = Math.round(HelpNum * after) / after + 'b';\r\n  }\r\n  else if (number > million) {\r\n    HelpNum = number / million;\r\n    strNum = Math.round(HelpNum * after) / after + 'm';\r\n  }\r\n  else {\r\n    HelpNum = number;\r\n    strNum = Math.round(HelpNum * after) / after;\r\n  }\r\n\r\n  return{\r\n    number: number,\r\n    strnum: strNum\r\n  }\r\n}\r\n\r\nexport const PutData = (dataAPI) => {\r\n\r\n  let newData = new Map();\r\n  dataAPI.forEach(e => {\r\n    newData.set(e.id,\r\n      {\r\n        name: e.name,\r\n        price: e.priceUsd,\r\n        capital: e.marketCapUsd,\r\n        volume24: parseFloat(e.volumeUsd24Hr)\r\n      }\r\n      )\r\n  });\r\n  return {\r\n    type: PUT_DATA,\r\n    data: newData\r\n  }\r\n}\r\n\r\nexport const UpdateData = (WSMSG) => {\r\n  \r\n  let newData = {\r\n    key: WSMSG.base,\r\n    price: WSMSG.priceUsd,\r\n    volume: WSMSG.volume,\r\n  };\r\n  return {\r\n    type: UPDATE_DATA,\r\n    data: newData\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport {ConvertLongNumber} from '../../store/actions'\r\n\r\n\r\n\r\n\r\n\r\nconst RowTable = (props) =>{\r\n    return(\r\n        <tr className={props.classForTr}>\r\n            <td>{props.name}</td>\r\n            <td>${ConvertLongNumber(props.price).strnum}</td>\r\n            <td className=\"mob_hidden\">${ConvertLongNumber(props.capital).strnum}</td>\r\n            <td className=\"mob_hidden\">${ConvertLongNumber(props.volume24).strnum}</td>\r\n        </tr>\r\n    );\r\n} \r\n\r\nexport default RowTable;","import React,{useEffect} from 'react';\r\nimport { connect} from 'react-redux';\r\nimport { bindActionCreators } from 'redux'\r\nimport { getData } from '../../store/actions'\r\nimport RowTable from '../RowTable/RowTable'\r\nimport './css/MainTable.css';\r\n\r\nimport {useDispatch} from 'react-redux'\r\nimport {UpdateData} from '../../store/actions';\r\n\r\nconst tradeWs = new WebSocket('wss://ws.coincap.io/trades/binance')\r\n\r\nconst MainTable = (props) => {\r\n    const { items, getData } = props\r\n    const TrItems = [];\r\n    if(!items.size)\r\n    {\r\n        getData();\r\n    }\r\n    items.forEach(e => {\r\n        TrItems.push(<RowTable classForTr={e.css} key={TrItems.length} keyItem={TrItems.length} name={e.name} price={e.price} capital={e.capital} volume24={e.volume24}/>)\r\n    });\r\n\r\n    const dispatch = useDispatch()    \r\n    useEffect(()=>{\r\n        tradeWs.onmessage = msg =>{\r\n            const obj = JSON.parse(msg.data);\r\n            dispatch(UpdateData(obj));\r\n        }\r\n    })\r\n    return (\r\n        <table className=\"main_table\">\r\n            <thead>\r\n                <tr>\r\n                    <th className=\"left\">Name</th>\r\n                    <th>Price</th>\r\n                    <th className=\"mob_hidden\">Market Cap</th>\r\n                    <th className=\"mob_hidden\">VWAP (24Hr)</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {TrItems}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nconst putStateToProps = (state) => {\r\n    return { items: state.crycur }\r\n};\r\n\r\nconst putActionsToProps = (dispatcher) => {\r\n    return { getData: bindActionCreators(getData, dispatcher) }\r\n};\r\n\r\n\r\nexport default connect(putStateToProps, putActionsToProps)(MainTable);","import React from 'react';\r\nimport MainTable from '../MainTable/MainTable';\r\nimport './css/Main.css'\r\n\r\nconst Main = () => {\r\n    return (\r\n        <main className=\"main\">\r\n            <div className=\"blueback\"></div>\r\n            <div className=\"container\">\r\n                <div className=\"scroll\">\r\n                    <MainTable/>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport Header from '../Header/Header';\r\nimport Main from '../Main/Main'\r\nimport './App.css'\r\nimport './fonts.css';\r\n\r\n\r\nconst App = (props) => {\r\n\r\n    return(\r\n        <div>\r\n            <Header></Header>\r\n            <Main></Main>\r\n        </div>\r\n    )\r\n}\r\nexport default App;","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {PUT_DATA,UPDATE_DATA} from './actions'\r\n\r\nconst initialState = {\r\n    crycur: new Map()\r\n}\r\n\r\n\r\nconst Reducer = (state = initialState,action) =>{\r\n    switch(action.type)\r\n    {\r\n        case PUT_DATA:           \r\n            return{...state, crycur: action.data};\r\n            \r\n        case UPDATE_DATA:\r\n            const newstate = new Map();\r\n            for(let [key,value] of state.crycur.entries()){\r\n\r\n                let css = '';\r\n\r\n                if(key === action.data.key)\r\n                {   \r\n                    if(value.price > action.data.price) css = 'value_down'\r\n                    else css = 'value_up'\r\n\r\n                    value.price = action.data.price\r\n                    value.volume24 += action.data.volume\r\n                }\r\n                value.css = css;\r\n                newstate.set(key,value);\r\n            }\r\n\r\n            return{...state, crycur: newstate };\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default Reducer;","import {takeEvery,put,call} from 'redux-saga/effects';\r\nimport {GET_DATA,PutData} from './actions';\r\n\r\n\r\n\r\nfunction fetchData(){\r\n    var requestOptions = {\r\n        method: 'GET',\r\n        redirect: 'follow'\r\n      };\r\n    return fetch('https://api.coincap.io/v2/assets?limit=15',requestOptions).then(res => res.json());\r\n}\r\n\r\nfunction* workerGetData(){\r\n    const data = yield call(fetchData)\r\n    yield put(PutData(data.data));\r\n}\r\n\r\nexport function* watchGetData(){\r\n    yield takeEvery(GET_DATA,workerGetData);\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducer from './store/reducer';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { watchGetData } from './store/sagas'\nimport { BrowserRouter } from 'react-router-dom';\n\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducer, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(watchGetData);\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}